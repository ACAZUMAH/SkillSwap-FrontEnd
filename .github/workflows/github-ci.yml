name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CI: false

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-folder --production=false

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

  build:
    name: Build
    needs: install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: build
        run: yarn run build

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run tests
        run: yarn run test --u

  preview:
    needs: [install, build, test]
    name: Preview
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Create env file
        run: |
          touch ".env"
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
          echo "VITE_API_GRAPHQLWS_URL=${{ secrets.VITE_API_GRAPHQLWS_URL }}" >> .env
          echo "VITE_ZEGO_APP_ID=${{ secrets.VITE_ZEGO_APP_ID }}" >> .env
          echo "VITE_ZEGO_SERVER_SECRET=${{ secrets.VITE_ZEGO_SERVER_SECRET }}" >> .env
          echo "VITE_VAPID_PUBLIC_KEY=${{ secrets.VITE_VAPID_PUBLIC_KEY }}" >> .env

      - name: Install Netlify CLI
        run: yarn global add netlify-cli

      - name: Deploy to Netlify Preview
        run: |
          netlify deploy \
            --site=${{ secrets.NETLIFY_PRODUCTION_SITE_ID }} \
            --auth=${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --dir dist/ \

  production:
    needs: [install, build, test]
    name: Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"

      - name: Restore node_modules cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Create env file
        run: |
          touch ".env"
          echo "VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}" >> .env
          echo "VITE_API_GRAPHQLWS_URL=${{ secrets.VITE_API_GRAPHQLWS_URL }}" >> .env
          echo "VITE_ZEGO_APP_ID=${{ secrets.VITE_ZEGO_APP_ID }}" >> .env
          echo "VITE_ZEGO_SERVER_SECRET=${{ secrets.VITE_ZEGO_SERVER_SECRET }}" >> .env

      - name: Install Netlify CLI
        run: yarn global add netlify-cli

      - name: Deploy to Netlify
        id: netlify_deploy
        run: |
          netlify deploy \
            --site=${{ secrets.NETLIFY_PRODUCTION_SITE_ID }} \
            --auth=${{ secrets.NETLIFY_AUTH_TOKEN }} \
            --dir dist/ \
            --prod
